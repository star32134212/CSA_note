server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name orangehello.nctu.me;
        set $base /usr/local/www/orangehello.nctu.me;
        #root $base/public;

        # SSL
        # ssl_certificate /etc/letsencrypt/live/orangehello.nctu.me/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/orangehello.nctu.me/privkey.pem;
        # ssl_trusted_certificate /etc/letsencrypt/live/orangehello.nctu.me/chain.pem;

        # security
        include nginxconfig.io/security.conf;

        # location
        location / {
                root $base/vs_dn/public;
                index index.html;
        }
orange@orange-sa:/usr/local/etc/nginx/sites-available % cat orangehello.nctu.me.conf
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name orangehello.nctu.me;
	set $base /usr/local/www/orangehello.nctu.me;
	#root $base/public;

	# SSL
	# ssl_certificate /etc/letsencrypt/live/orangehello.nctu.me/fullchain.pem;
	# ssl_certificate_key /etc/letsencrypt/live/orangehello.nctu.me/privkey.pem;
	# ssl_trusted_certificate /etc/letsencrypt/live/orangehello.nctu.me/chain.pem;

	# security
	include nginxconfig.io/security.conf;

	# location
    	location / {
        	root $base/vs_dn/public;
        	index index.html;
    	}



	# index.php
	# index index.php;

	# index.php fallback
	# location / {
	# 	try_files $uri $uri/ /index.php?$query_string;
	# }

	# rewrite
	location /app {
		root $base/vs_dn/public;
		if ($is_args = ""){
			rewrite /app /app/index.php?type=1 last;
		}
		rewrite /app /app/index.php?type=3 last;
	}

	location ~ /app/[0-9]+\+[0-9]+ {
		root $base/vs_dn/public;
		rewrite /app/([0-9]+)\+([0-9]+) /app/index.php?type=2&num1=$1&num2=$2 last;
	}

	# handle .php
	location ~ \.php$ {
		root $base/vs_dn/public;
		include nginxconfig.io/php_fastcgi.conf;
	}

	# handle /app/index.php
	location ~ /app/.+\.php$ {
		root $base/vs_dn/public;
		fastcgi_param QUERY_STRING	$args;
		include nginxconfig.io/php_fastcgi.conf;
	}

	location ~ ^\/sites {
		rewrite /sites/~([^/]+) /nextcloud/data/$1/files/public_html/index.html last;
	}

	location ^~ /nextcloud {

		add_header X-Content-Type-Options nosniff;
		add_header X-XSS-Protection "1; mode=block";
		add_header X-Robots-Tag none;
		add_header X-Download-Options noopen;
		add_header X-Permitted-Cross-Domain-Policies none;
		add_header Referrer-Policy no-referrer;
		add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";

		root $base/vs_dn/public;
	        # set max upload size
       		client_max_body_size 512M;
        	fastcgi_buffers 64 4K;

        	# Enable gzip but do not remove ETag headers
        	gzip on;
        	gzip_vary on;
       		gzip_comp_level 4;
        	gzip_min_length 256;
        	gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
        	gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

        	# Uncomment if your server is build with the ngx_pagespeed module
        	# This module is currently not supported.
        	#pagespeed off;


        	location /nextcloud {
            		rewrite ^ /nextcloud/index.php;
        	}

        	location ~ ^\/nextcloud\/(?:build|tests|config|lib|3rdparty|templates)\/ {
            		deny all;
        	}
        	location ~ ^\/nextcloud\/(?:\.|autotest|occ|issue|indie|db_|console) {
            		deny all;
        	}

        	location ~ ^\/nextcloud\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+)\.php(?:$|\/) {
            		fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;
            		set $path_info $fastcgi_path_info;
            		try_files $fastcgi_script_name =404;
            		include fastcgi_params;
            		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            		fastcgi_param PATH_INFO $path_info;
            		fastcgi_param HTTPS on;
            		# Avoid sending the security headers twice
            		fastcgi_param modHeadersAvailable true;
            		# Enable pretty urls
            		fastcgi_param front_controller_active true;
            		fastcgi_pass 127.0.0.1:9000;
            		fastcgi_intercept_errors on;
            		fastcgi_request_buffering off;
        	}

        	location ~ ^\/nextcloud\/(?:updater|oc[ms]-provider)(?:$|\/) {
            		try_files $uri/ =404;
            		index index.php;
        	}

        	# Adding the cache control header for js, css and map files
        	# Make sure it is BELOW the PHP block
        	location ~ ^\/nextcloud\/.+[^\/]\.(?:css|js|woff2?|svg|gif|map)$ {
            		try_files $uri /nextcloud/index.php$request_uri;
            		add_header Cache-Control "public, max-age=15778463";
            		# Add headers to serve security related headers  (It is intended
            		# to have those duplicated to the ones above)
            		# Before enabling Strict-Transport-Security headers please read
            		# into this topic first.
            		#add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
            		#
            		# WARNING: Only add the preload option once you read about
            		# the consequences in https://hstspreload.org/. This option
            		# will add the domain to a hardcoded list that is shipped
            		# in all major browsers and getting removed from this list
            		# could take several months.
            		# add_header X-Content-Type-Options nosniff;
            		# add_header X-XSS-Protection "1; mode=block";
            		# add_header X-Robots-Tag none;
            		# add_header X-Download-Options noopen;
            		# add_header X-Permitted-Cross-Domain-Policies none;
            		add_header Referrer-Policy no-referrer;
			add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";

            		# Optional: Don't log access to assets
            		access_log off;
        	}

        	location ~ ^\/nextcloud\/.+[^\/]\.(?:png|html|ttf|ico|jpg|jpeg|bcmap)$ {
            		try_files $uri /nextcloud/index.php$request_uri;
            		# Optional: Don't log access to other assets
            		access_log off;
        	}
    	}


	# additional config
	include nginxconfig.io/general.conf;
}

# IP-based virtual server
server{
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name _;
    set $base /usr/local/www/orangehello.nctu.me;

    # security
    include nginxconfig.io/security.conf;

    location / {
        root $base/vs_ip/public;
        index index.html;
    }

    location /private {
	satisfy all;

	deny 10.113.0.0/16;
	allow 172.16.0.0/12;
	allow 192.168.0.0/16;
	allow 10.0.0.0/8;
	#deny 10.113.0.0/16;
	deny all;

	auth_basic "Password protected page";
	auth_basic_user_file /usr/local/etc/nginx/.htpasswd;

	root $base/vs_ip;
	index index.html;
    }
    # additional config
    include nginxconfig.io/general.conf;
}

# subdomains redirect
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name *.orangehello.nctu.me;

	# SSL
	#ssl_certificate /etc/letsencrypt/live/orangehello.nctu.me/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/orangehello.nctu.me/privkey.pem;
	#ssl_trusted_certificate /etc/letsencrypt/live/orangehello.nctu.me/chain.pem;

	return 301 https://orangehello.nctu.me$request_uri;
}

# HTTP redirect
server {
	listen 80;
	listen [::]:80;

	# server_name .orangehello.nctu.me;
	server_name _;
	#include nginxconfig.io/letsencrypt.conf;

	location / {
		return 301 https://$host$request_uri;
	}
}

#phpMyAdmin
server {
	listen 8080 default_server;
	server_name _;

	allow 192.168.53.0/24;
	deny all;

	# security
	include nginxconfig.io/security.conf;

	root /usr/local/www/phpMyAdmin;
	index index.php;

	location / {
		try_files $uri $uri/ /index.php?q=$uri&$args;
	}

	location ~ \.php$ {
		include nginxconfig.io/php_fastcgi.conf;
	}
	location ~ /\.ht {
		deny all;
	}

	# additional config
	include nginxconfig.io/general.conf;
}